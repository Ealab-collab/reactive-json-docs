renderView:
  - type: Markdown
    content: |
      # Actions

      > For an introduction to the actions system and detailed examples, see [Getting Started: Actions](../../getting-started/actions).

      Actions in Reactive-JSON allow you to modify element behavior and appearance based on dynamic conditions. They are evaluated continuously based on data state and provide state-driven UI adaptation.

      ## Available Action Components

      ### Visibility Control
      - **[Hide](./Hide)**: Completely hides the element and its children
      - **[VisuallyHide](./VisuallyHide)**: Visually hides the element while keeping it accessible to screen readers

      ### User Interaction
      - **[Tooltip](./Tooltip)**: Displays a tooltip on hover
      - **[Popover](./Popover)**: Shows a more complex popover on click

      ### Navigation
      - **[Redirect](./Redirect)**: Redirects to a specified URL

      ### Event Management

      Those actions have a special handling in Reactive-JSON. The engine transparently load them
      when the user requests a [reaction](../../getting-started/reactions) on a given element component.

      As a user, you won't need to work with them directly.

      - **[HashChangeListener](./HashChangeListener)**: Listens for URL hash changes
      - **[MessageListener](./MessageListener)**: Listens for window messages
      - **[ReactOnEvent](./ReactOnEvent)**: Reacts to custom events

